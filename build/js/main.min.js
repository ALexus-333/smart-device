/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/accordion */ "./js/modules/modals/accordion.js");
/* harmony import */ var _modules_modals_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/modals/modal */ "./js/modules/modals/modal.js");
/* harmony import */ var _modules_modals_scroll_to__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/modals/scroll-to */ "./js/modules/modals/scroll-to.js");
/* harmony import */ var _modules_modals_show_more__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/modals/show-more */ "./js/modules/modals/show-more.js");
/* harmony import */ var _modules_form_validate_init_phone_input__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/form-validate/init-phone-input */ "./js/modules/form-validate/init-phone-input.js");







// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])();

  // Modules

  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    Object(_modules_modals_accordion__WEBPACK_IMPORTED_MODULE_1__["openAccordion"])();
    Object(_modules_modals_modal__WEBPACK_IMPORTED_MODULE_2__["openModal"])();
    Object(_modules_modals_modal__WEBPACK_IMPORTED_MODULE_2__["closeModal"])();
    Object(_modules_modals_modal__WEBPACK_IMPORTED_MODULE_2__["setupPhoneInputs"])();
    Object(_modules_modals_modal__WEBPACK_IMPORTED_MODULE_2__["submitForm"])();
    Object(_modules_modals_modal__WEBPACK_IMPORTED_MODULE_2__["submitModal"])();
    Object(_modules_modals_scroll_to__WEBPACK_IMPORTED_MODULE_3__["scrollToFeedback"])();
    Object(_modules_modals_show_more__WEBPACK_IMPORTED_MODULE_4__["showMore"])();
    document.querySelectorAll('[type="tel"]').forEach(function (input) {
      Object(_modules_form_validate_init_phone_input__WEBPACK_IMPORTED_MODULE_5__["initPhoneInput"])(input.parentElement);
    });
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

/***/ }),

/***/ "./js/modules/form-validate/init-phone-input.js":
/*!******************************************************!*\
  !*** ./js/modules/form-validate/init-phone-input.js ***!
  \******************************************************/
/*! exports provided: initPhoneInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPhoneInput", function() { return initPhoneInput; });
var baseCountryCode = '+7';
var baseMatrix = ' (___) ___ __ __';
var phoneLength = baseCountryCode.length + baseMatrix.length;
var onPhoneInputInput = function onPhoneInputInput(e) {
  var matrix = "".concat(baseCountryCode).concat(baseMatrix);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = e.target.value.replace(/\D/g, '');
  if (def.length >= val.length) {
    val = def;
  }
  e.target.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};
var onPhoneInputFocus = function onPhoneInputFocus(_ref) {
  var target = _ref.target;
  if (!target.value) {
    target.value = baseCountryCode;
  }
  target.addEventListener('input', onPhoneInputInput);
  target.addEventListener('blur', onPhoneInputBlur);
  target.addEventListener('keydown', onPhoneInputKeydown);
  target.addEventListener('paste', onPhoneInputPaste);
  target.addEventListener('click', onPhoneInputClick);
};
var onPhoneInputClick = function onPhoneInputClick(e) {
  if (e.target.selectionStart < 4) {
    e.preventDefault();
    e.target.setSelectionRange(3, 3);
  }
};
var onPhoneInputPaste = function onPhoneInputPaste(e) {
  e.target.setSelectionRange(0, 0);
  if (!e.target.selectionStart) {
    setTimeout(function () {
      if (e.target.value.startsWith('+7')) {
        return;
      }
      if (e.target.value.startsWith('+8')) {
        e.target.value = "+7 ".concat(e.target.value.slice(3));
        return;
      }
      e.target.value = '';
    });
  }
};
var onPhoneInputKeydown = function onPhoneInputKeydown(e) {
  if (e.target.selectionStart < 4 && (e.keyCode === 37 || e.keyCode === 13)) {
    e.preventDefault();
    e.target.setSelectionRange(3, 3);
  }
};
var onPhoneInputBlur = function onPhoneInputBlur(_ref2) {
  var target = _ref2.target;
  if (target.value === baseCountryCode) {
    var parent = target.closest('[data-validate-type="phone"]');
    target.value = '';
    if (!parent.hasAttribute('data-required')) {
      parent.classList.remove('is-valid');
      parent.classList.remove('is-invalid');
      var parentMessage = parent.querySelector('.input-message');
      if (parentMessage) {
        parentMessage.remove();
      }
    }
    parent.classList.remove('not-empty');
    target.removeEventListener('input', onPhoneInputInput);
    target.removeEventListener('blur', onPhoneInputBlur);
    target.removeEventListener('keydown', onPhoneInputKeydown);
    target.removeEventListener('paste', onPhoneInputPaste);
    target.removeEventListener('click', onPhoneInputClick);
  }
};
var initPhoneInput = function initPhoneInput(parent) {
  var input = parent.querySelector('input');
  parent.dataset.phoneLength = phoneLength;
  input.addEventListener('focus', onPhoneInputFocus);
};

/***/ }),

/***/ "./js/modules/modals/accordion.js":
/*!****************************************!*\
  !*** ./js/modules/modals/accordion.js ***!
  \****************************************/
/*! exports provided: openAccordion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "openAccordion", function() { return openAccordion; });
var openAccordion = function openAccordion() {
  var wrapper = document.querySelectorAll('.accordion__wrapper');
  var elementsArr = [];
  wrapper.forEach(function (node) {
    elementsArr.push(node);
  });
  var titles = document.querySelectorAll('.accordion__title');
  if (titles) {
    elementsArr.forEach(function (e) {
      e.classList.remove('no-js');
    });
    titles.forEach(function (e) {
      e.classList.remove('accordion__title--none');
    });
    for (var i = 0; i < titles.length; i++) {
      titles[i].onclick = function () {
        this.classList.toggle('active');
        var box = this.nextElementSibling;
        if (box.style.maxHeight) {
          box.style.maxHeight = null;
        } else {
          box.style.maxHeight = box.scrollHeight + 'px';
        }
        for (var j = 0; j < titles.length; j++) {
          if (titles[j] !== this) {
            titles[j].classList.remove('active');
            titles[j].nextElementSibling.style.maxHeight = null;
          }
        }
      };
    }
  }
};


/***/ }),

/***/ "./js/modules/modals/modal.js":
/*!************************************!*\
  !*** ./js/modules/modals/modal.js ***!
  \************************************/
/*! exports provided: openModal, closeModal, submitForm, submitModal, setupPhoneInputs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "openModal", function() { return openModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeModal", function() { return closeModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "submitForm", function() { return submitForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "submitModal", function() { return submitModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setupPhoneInputs", function() { return setupPhoneInputs; });
/* harmony import */ var _utils_focus_lock_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/focus-lock.js */ "./js/utils/focus-lock.js");

var body = document.body;
var arrayTagA = document.querySelectorAll('a');
var arrayTagInput = document.querySelectorAll('input');
var arrayTagButton = document.querySelectorAll('button');
var arrayTagTextarea = document.querySelectorAll('textarea');
var menuBtn = document.querySelector('.menu__button');
var modal = document.querySelector('.modal');
var closeBtn = modal.querySelector('.modal__close-btn');
var overlay = modal.querySelector('.modal__overlay');
var form = document.querySelector('.form');
var modalForm = document.querySelector('.popup__form');
var setTabindex = function setTabindex(arr, num) {
  arr.forEach(function (e) {
    e.setAttribute('tabindex', num);
  });
};
var createElementsArr = function createElementsArr() {
  var elementsArr = [];
  arrayTagA.forEach(function (node) {
    elementsArr.push(node);
  });
  arrayTagInput.forEach(function (node) {
    elementsArr.push(node);
  });
  arrayTagButton.forEach(function (node) {
    elementsArr.push(node);
  });
  arrayTagTextarea.forEach(function (node) {
    elementsArr.push(node);
  });
  return elementsArr;
};
var getFormInputs = function getFormInputs(_form) {
  var inputName = _form.querySelector('input[name="имя"]');
  var inputPhone = _form.querySelector('input[name="телефон"]');
  var inputQuestion = _form.querySelector('textarea[name="вопрос"]');
  return {
    inputName: inputName,
    inputPhone: inputPhone,
    inputQuestion: inputQuestion
  };
};
var isPhone = function isPhone(value) {
  return /^(\+7|7|8)?[\s\-]?\(?[0-9]{3}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$/.test(value);
};
var onFormSubmit = function onFormSubmit(formToSubmit) {
  formToSubmit.addEventListener('submit', function (e) {
    var _getFormInputs = getFormInputs(formToSubmit),
      inputName = _getFormInputs.inputName,
      inputPhone = _getFormInputs.inputPhone,
      inputQuestion = _getFormInputs.inputQuestion;
    if (!isPhone(inputPhone.value)) {
      e.preventDefault();
    } else {
      localStorage.setItem('имя', inputName.value);
      localStorage.setItem('телефон', inputPhone.value);
      localStorage.setItem('вопрос', inputQuestion.value);
    }
  });
};
var setOnPhoneInputChange = function setOnPhoneInputChange(input) {
  input.addEventListener('change', function (e) {
    var value = e.target.value;
    if (!value || !isPhone(value)) {
      input.setCustomValidity('Введите номер');
    } else {
      input.setCustomValidity('');
    }
  });
};
var setupPhoneInputs = function setupPhoneInputs() {
  var _getFormInputs2 = getFormInputs(form),
    formPhoneInput = _getFormInputs2.inputPhone;
  setOnPhoneInputChange(formPhoneInput);
  var _getFormInputs3 = getFormInputs(modalForm),
    modalPhoneInput = _getFormInputs3.inputPhone;
  setOnPhoneInputChange(modalPhoneInput);
};
var submitForm = function submitForm() {
  return onFormSubmit(form);
};
var submitModal = function submitModal() {
  return onFormSubmit(modalForm);
};
var openModal = function openModal() {
  menuBtn.addEventListener('click', function (e) {
    if (modal) {
      e.preventDefault();
      modal.classList.add('is-active');
      body.style.overflow = 'hidden';
      window.focusLock.lock('.modal');
      setTabindex(createElementsArr(), -1);
      var focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])';
      var focusableContent = modal.querySelectorAll(focusableElements);
      setTabindex(focusableContent, 0);
      setTimeout(function () {
        modal.querySelector('input[name="имя"]').focus({
          focusVisible: true
        });
      }, 500);
    }
  });
};
var handleClose = function handleClose() {
  modal.classList.remove('is-active');
  body.style.overflow = 'visible';
  window.focusLock.unlock('.modal');
  setTabindex(createElementsArr(), 0);
};
var closeModal = function closeModal() {
  if (closeBtn) {
    closeBtn.addEventListener('click', function () {
      return handleClose();
    });
  }
  window.addEventListener('keydown', function (e) {
    if (e.key === 'Escape' && modal.classList.contains('is-active')) {
      handleClose();
    }
  });
  if (overlay) {
    overlay.addEventListener('click', function () {
      return handleClose();
    });
  }
};


/***/ }),

/***/ "./js/modules/modals/scroll-to.js":
/*!****************************************!*\
  !*** ./js/modules/modals/scroll-to.js ***!
  \****************************************/
/*! exports provided: scrollToFeedback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scrollToFeedback", function() { return scrollToFeedback; });
var scrollTo = function scrollTo(element) {
  window.scroll({
    left: 0,
    top: element.offsetTop,
    behavior: 'smooth'
  });
};
var promoBtn = document.querySelector('.promo__button');
var feedback = document.querySelector('.feedback');
var scrollToFeedback = function scrollToFeedback() {
  if (!feedback) {
    promoBtn.style.display = 'none';
  } else {
    promoBtn.addEventListener('click', function () {
      scrollTo(feedback);
    });
  }
};


/***/ }),

/***/ "./js/modules/modals/show-more.js":
/*!****************************************!*\
  !*** ./js/modules/modals/show-more.js ***!
  \****************************************/
/*! exports provided: showMore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "showMore", function() { return showMore; });
var fullText = document.querySelector('.about__text--fulltext');
var aboutBtn = document.querySelector('.about__button');
var showMore = function showMore() {
  if (fullText) {
    aboutBtn.addEventListener('click', function () {
      if (fullText.classList.contains('is-hidden')) {
        fullText.classList.remove('is-hidden');
        aboutBtn.textContent = 'Свернуть';
      } else {
        fullText.classList.add('is-hidden');
        aboutBtn.textContent = 'Подробнее';
      }
    });
  } else {
    aboutBtn.style.display = 'none';
  }
};


/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);
    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }
  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;
      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }
        if (this._focusableElements.length === 1) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
      }
      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();
        this._focusableElements[0].focus();
      }
      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();
        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      if (!lockedElement) {
        return;
      }
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];
      if (this._endElement) {
        this._endElement.blur();
      }
      if (startElement && startFocus) {
        startElement.focus();
      }
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }
      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);
  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");

var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};


/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map